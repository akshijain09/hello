// Program to count an number

https://www.geeksforgeeks.org/program-count-numbers-fingers/

Input : 17
Output :1

Input :27
Output :3



#include <iostream>

using namespace std;
int calculate(int n){
    int c=5;
    if(n<=5)return n;
    else{
       
        while(c!=n){
            while(r>1 && c!=n){
                c++;
                r--;
            }
            while(r<5 && c!=n){
                c++;
                r++;
            }
        }
        return r;
    }
}
int main()
{
    int n;
    cin>>n;
   cout<<calculate(n);
}

q2 https://practice.geeksforgeeks.org/problems/sequence-of-sequence1155/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article
Recursion based sequence of sequence gfg
Input: m = 10, n = 4
Output: 4
Explaination: There should be n elements and 
value of last element should be at-most m. 
The sequences are {1, 2, 4, 8}, {1, 2, 4, 9}, 
{1, 2, 4, 10}, {1, 2, 5, 10}.

code:- 
class Solution{
public:
    int numberSequence(int m, int n){
        // code here
        if(m<n)return 0;
        if(n==0)return 1;
        return numberSequence(m/2,n-1)+numberSequence(m-1,n);
    }
};



q3 Input:

K: 4
N: 5
Arr: [2,3,4,5,6]
Output:

32
Explanation:

First, K smallest non-divisible by Arr_i integers will be 1, 7, 11, 13. Hence the sum will be 32.
#include <iostream>

using namespace std;

int main()
{
    int n,k,count=0,flag;
    int sum=0;
    cin>>n>>k;
    int arr[n];
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    int m=1;
    while(count!=k){
        for(int i=0;i<n;i++){
              flag=0;
            if(m%arr[i]==0){
                flag=1;
                break;
            }
        }
        if(flag==0){
            count++;
            sum+=m;
        }
        m++;
        
    }
    cout<<sum;
    
}

